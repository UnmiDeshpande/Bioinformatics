def hamming_distance(s, t):
    # Ensure strings are of equal length
    if len(s) != len(t):
        raise ValueError("Strings must be of equal length")
    
    # Count mismatches
    distance = sum(1 for a, b in zip(s, t) if a != b)
    return distance

# Sample input
s = "CTGGCGCAGGGCAACCAATCGAGGCCAGACGAGCGCGACGATCTAACTCGGGCCCGTTGGACGCATTAACCTTAGAGTTTTCATATCTCTCGGTCCGGGTCCCTCTGCAGTATGTGTTTCTATATCCCTGACCGGGGAACCAGGACAACACGGCGACAGCCTTAGTCTCGTCGGCAAACGTCTACTCCCTGACATGCCCCTATATCACACTGAATGAAGAGTTGATATTTTGAAGGGTTCTGGTGAAATCCTCCGTTCTTTTCCACGGTATACCAGCGAGTACCCTGTGTGCTTCGCCGCGTCGCGGTGTGGCCACCAGACCTGCCGGCTATCCCACGGAAGAGGGGTGTCATAGAGCTAAATTTTCTGCGAACGTTCAGGTTTCGGGCCGGAGGGACTGACCTTGCTACACTACGTAACTCGTCGGCCTTTTACCAACAGATCGAGCAACAGAAAGGGGGATCGCCCATATCTATTCGTCTCACGGACATTCTAACACAGTTGCCGTGGTTAAATCTCACGAGACGGAGTCCCCAGCAGACGCCTCTGGAGGACAGACATGAGGGTGGCTTTTGCGTGAGAGACTATACTTAGAAGACGTTAATATTAGAGCATCGCGACTGCGAGCGTCATGAAACCATACAACGCAAAAAGAGTGGTACGCGCCTAGTTAGCTGTCACGTGAATGCAAACCGTGATAACACGGAGTCCCGGCGACGGTTCGCCATTGAAGTTCCGAGGTCGGGTAAACTGAGTCCGTTCTCCTTGTCCTAGACTCTACCGTCTACTCGTAAATCCCCGCGCCCGGGTGGTGGTCTTTAGGGTTCCGCGGTGTGATATATAACGCTCACGTTGGGTCGTATGCCTGTCCTTCGTCCATTGAGCTCTTAAGTAAGGACGCAGTGCGCAAGTGAGGGCATTTCATGTGAGTCCAGTT"
t = "CGGGTGCAAGGTAACCTAGAGAAGTCAGAAGAGTACACTCATGCAGCCCGAACACCTGGTACGAACCACCCTTAGTGCATAAATCCCTACAGTTCTAGAACCTGGAGCACTATCGGTTCCTAATACCTTTAATAGGAAACAATAAAAATACGCAGACTGCCTTATTGATGTCATAATGTCTCTTCAAACTCACAACCACATACATAATAACAATAGCAGACCGGATATTTCCGATATTGCGGCTCAAATCTGCCTATTCTTTCATAGGTTCAACAACGGGGATCCCAGATGCTTTAGCACCTCCCCCTCCGGATACCATTACTGGACCATTTCCGGTGATAGAGTCTTTCGCTCGTGGTATACTGCATGTCAACCTCCGTGCGTGGTCCGAAAGAACCGAATATTGCTTAAACGCGTGGTCGGTCCTTCGTGACCCCTCAGAGGTCGCAGAAAAAAACGTGGACTCTTTTATTGTTGCTACTCCTGGAGAGGTTAACGTCATTGTGGGGGCTGAGTCTCTTACGCCCCATTCCACACCAGAGTCTTCTGTAGTATTTGCAGTTGCTTTATCTCCGATAGACCCACCCACCGACCTGGAAGTTCTTACTAGACATGTGAGATTGCGCGTGAGGTTAACCTTTAAAACGTTCACCTAATCGCGCCCGTGAATAGAGGTACAAAATTCAGTCACACTTCTATTAAAGGGATTGCACTACGGGGTCAACTAATTACGCGAGAGAGACGGCACAACTGCGACGGTTCACCTGATCCTTGTCGCTACTGTCTACTGATTAACACCTGCCCATATGGGCTGATTCCCAGTTTGCTTTCGCATGCTCTAATTGGCTAAATATGGCGGTACTGCCTGAGCTCCCTCCAATGAGCTCGTCAACAAGCACAGAGAGTGCTAGGGCGCGCATTGCAAGAGATTCCGGGT"

# Compute Hamming distance
print(hamming_distance(s, t))
